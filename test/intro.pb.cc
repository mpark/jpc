// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: intro.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "intro.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace intro {

namespace {

const ::google::protobuf::Descriptor* BarInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BarInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FooInfo_H_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_intro_2eproto() {
  protobuf_AddDesc_intro_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "intro.proto");
  GOOGLE_CHECK(file != NULL);
  BarInfo_descriptor_ = file->message_type(0);
  static const int BarInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarInfo, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarInfo, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarInfo, z_),
  };
  BarInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BarInfo_descriptor_,
      BarInfo::default_instance_,
      BarInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BarInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BarInfo));
  FooInfo_descriptor_ = file->message_type(1);
  static const int FooInfo_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, e_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, h_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, j_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, k_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, l_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, o_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, bar_),
  };
  FooInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FooInfo_descriptor_,
      FooInfo::default_instance_,
      FooInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FooInfo));
  FooInfo_H_descriptor_ = FooInfo_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_intro_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BarInfo_descriptor_, &BarInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FooInfo_descriptor_, &FooInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_intro_2eproto() {
  delete BarInfo::default_instance_;
  delete BarInfo_reflection_;
  delete FooInfo::default_instance_;
  delete FooInfo_reflection_;
}

void protobuf_AddDesc_intro_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013intro.proto\022\005intro\"*\n\007BarInfo\022\t\n\001x\030\001 \002"
    "(\010\022\t\n\001y\030\002 \001(\003\022\t\n\001z\030\003 \001(\t\"\373\001\n\007FooInfo\022\t\n\001"
    "a\030\001 \002(\010\022\t\n\001b\030\002 \002(\005\022\t\n\001c\030\003 \002(\003\022\t\n\001d\030\004 \002(\r"
    "\022\t\n\001e\030\006 \002(\004\022\t\n\001f\030\007 \002(\001\022\t\n\001g\030\010 \002(\002\022\033\n\001h\030\005"
    " \002(\0162\020.intro.FooInfo.H\022\t\n\001i\030\t \002(\t\022\t\n\001j\030\n"
    " \003(\005\022\t\n\001k\030\013 \003(\t\022\t\n\001l\030\014 \001(\005\022\t\n\001m\030\r \001(\005\022\t\n"
    "\001n\030\016 \001(\003\022\t\n\001o\030\017 \001(\005\022\t\n\001p\030\020 \001(\005\022\033\n\003bar\030\021 "
    "\001(\0132\016.intro.BarInfo\"\021\n\001H\022\005\n\001X\020\001\022\005\n\001Y\020\000", 318);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "intro.proto", &protobuf_RegisterTypes);
  BarInfo::default_instance_ = new BarInfo();
  FooInfo::default_instance_ = new FooInfo();
  BarInfo::default_instance_->InitAsDefaultInstance();
  FooInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_intro_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_intro_2eproto {
  StaticDescriptorInitializer_intro_2eproto() {
    protobuf_AddDesc_intro_2eproto();
  }
} static_descriptor_initializer_intro_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BarInfo::kXFieldNumber;
const int BarInfo::kYFieldNumber;
const int BarInfo::kZFieldNumber;
#endif  // !_MSC_VER

BarInfo::BarInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:intro.BarInfo)
}

void BarInfo::InitAsDefaultInstance() {
}

BarInfo::BarInfo(const BarInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:intro.BarInfo)
}

void BarInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  x_ = false;
  y_ = GOOGLE_LONGLONG(0);
  z_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BarInfo::~BarInfo() {
  // @@protoc_insertion_point(destructor:intro.BarInfo)
  SharedDtor();
}

void BarInfo::SharedDtor() {
  if (z_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete z_;
  }
  if (this != default_instance_) {
  }
}

void BarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BarInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BarInfo_descriptor_;
}

const BarInfo& BarInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intro_2eproto();
  return *default_instance_;
}

BarInfo* BarInfo::default_instance_ = NULL;

BarInfo* BarInfo::New() const {
  return new BarInfo;
}

void BarInfo::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    x_ = false;
    y_ = GOOGLE_LONGLONG(0);
    if (has_z()) {
      if (z_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        z_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intro.BarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int64 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_z;
        break;
      }

      // optional string z = 3;
      case 3: {
        if (tag == 26) {
         parse_z:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_z()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->z().data(), this->z().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "z");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intro.BarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intro.BarInfo)
  return false;
#undef DO_
}

void BarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intro.BarInfo)
  // required bool x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->x(), output);
  }

  // optional int64 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->y(), output);
  }

  // optional string z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->z().data(), this->z().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "z");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:intro.BarInfo)
}

::google::protobuf::uint8* BarInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:intro.BarInfo)
  // required bool x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->x(), target);
  }

  // optional int64 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->y(), target);
  }

  // optional string z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->z().data(), this->z().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "z");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intro.BarInfo)
  return target;
}

int BarInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool x = 1;
    if (has_x()) {
      total_size += 1 + 1;
    }

    // optional int64 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->y());
    }

    // optional string z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->z());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BarInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BarInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BarInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BarInfo::MergeFrom(const BarInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BarInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarInfo::CopyFrom(const BarInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BarInfo::Swap(BarInfo* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BarInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BarInfo_descriptor_;
  metadata.reflection = BarInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* FooInfo_H_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooInfo_H_descriptor_;
}
bool FooInfo_H_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const FooInfo_H FooInfo::X;
const FooInfo_H FooInfo::Y;
const FooInfo_H FooInfo::H_MIN;
const FooInfo_H FooInfo::H_MAX;
const int FooInfo::H_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int FooInfo::kAFieldNumber;
const int FooInfo::kBFieldNumber;
const int FooInfo::kCFieldNumber;
const int FooInfo::kDFieldNumber;
const int FooInfo::kEFieldNumber;
const int FooInfo::kFFieldNumber;
const int FooInfo::kGFieldNumber;
const int FooInfo::kHFieldNumber;
const int FooInfo::kIFieldNumber;
const int FooInfo::kJFieldNumber;
const int FooInfo::kKFieldNumber;
const int FooInfo::kLFieldNumber;
const int FooInfo::kMFieldNumber;
const int FooInfo::kNFieldNumber;
const int FooInfo::kOFieldNumber;
const int FooInfo::kPFieldNumber;
const int FooInfo::kBarFieldNumber;
#endif  // !_MSC_VER

FooInfo::FooInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:intro.FooInfo)
}

void FooInfo::InitAsDefaultInstance() {
  bar_ = const_cast< ::intro::BarInfo*>(&::intro::BarInfo::default_instance());
}

FooInfo::FooInfo(const FooInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:intro.FooInfo)
}

void FooInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = false;
  b_ = 0;
  c_ = GOOGLE_LONGLONG(0);
  d_ = 0u;
  e_ = GOOGLE_ULONGLONG(0);
  f_ = 0;
  g_ = 0;
  h_ = 1;
  i_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  l_ = 0;
  m_ = 0;
  n_ = GOOGLE_LONGLONG(0);
  o_ = 0;
  p_ = 0;
  bar_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FooInfo::~FooInfo() {
  // @@protoc_insertion_point(destructor:intro.FooInfo)
  SharedDtor();
}

void FooInfo::SharedDtor() {
  if (i_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete i_;
  }
  if (this != default_instance_) {
    delete bar_;
  }
}

void FooInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooInfo_descriptor_;
}

const FooInfo& FooInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_intro_2eproto();
  return *default_instance_;
}

FooInfo* FooInfo::default_instance_ = NULL;

FooInfo* FooInfo::New() const {
  return new FooInfo;
}

void FooInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FooInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(a_, f_);
    h_ = 1;
  }
  if (_has_bits_[8 / 32] & 63744) {
    ZR_(n_, o_);
    if (has_i()) {
      if (i_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        i_->clear();
      }
    }
    l_ = 0;
    p_ = 0;
  }
  if (has_bar()) {
    if (bar_ != NULL) bar_->::intro::BarInfo::Clear();
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  j_.Clear();
  k_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FooInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intro.FooInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // required int32 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_c;
        break;
      }

      // required int64 c = 3;
      case 3: {
        if (tag == 24) {
         parse_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_d;
        break;
      }

      // required uint32 d = 4;
      case 4: {
        if (tag == 32) {
         parse_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &d_)));
          set_has_d();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_h;
        break;
      }

      // required .intro.FooInfo.H h = 5;
      case 5: {
        if (tag == 40) {
         parse_h:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::intro::FooInfo_H_IsValid(value)) {
            set_h(static_cast< ::intro::FooInfo_H >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_e;
        break;
      }

      // required uint64 e = 6;
      case 6: {
        if (tag == 48) {
         parse_e:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &e_)));
          set_has_e();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_f;
        break;
      }

      // required double f = 7;
      case 7: {
        if (tag == 57) {
         parse_f:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_)));
          set_has_f();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_g;
        break;
      }

      // required float g = 8;
      case 8: {
        if (tag == 69) {
         parse_g:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &g_)));
          set_has_g();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_i;
        break;
      }

      // required string i = 9;
      case 9: {
        if (tag == 74) {
         parse_i:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_i()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->i().data(), this->i().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "i");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_j;
        break;
      }

      // repeated int32 j = 10;
      case 10: {
        if (tag == 80) {
         parse_j:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_j())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_j())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_j;
        if (input->ExpectTag(90)) goto parse_k;
        break;
      }

      // repeated string k = 11;
      case 11: {
        if (tag == 90) {
         parse_k:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->k(this->k_size() - 1).data(),
            this->k(this->k_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "k");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_k;
        if (input->ExpectTag(96)) goto parse_l;
        break;
      }

      // optional int32 l = 12;
      case 12: {
        if (tag == 96) {
         parse_l:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &l_)));
          set_has_l();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_m;
        break;
      }

      // optional int32 m = 13;
      case 13: {
        if (tag == 104) {
         parse_m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_n;
        break;
      }

      // optional int64 n = 14;
      case 14: {
        if (tag == 112) {
         parse_n:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &n_)));
          set_has_n();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_o;
        break;
      }

      // optional int32 o = 15;
      case 15: {
        if (tag == 120) {
         parse_o:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &o_)));
          set_has_o();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_p;
        break;
      }

      // optional int32 p = 16;
      case 16: {
        if (tag == 128) {
         parse_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_)));
          set_has_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_bar;
        break;
      }

      // optional .intro.BarInfo bar = 17;
      case 17: {
        if (tag == 138) {
         parse_bar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intro.FooInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intro.FooInfo)
  return false;
#undef DO_
}

void FooInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intro.FooInfo)
  // required bool a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->a(), output);
  }

  // required int32 b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // required int64 c = 3;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->c(), output);
  }

  // required uint32 d = 4;
  if (has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->d(), output);
  }

  // required .intro.FooInfo.H h = 5;
  if (has_h()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->h(), output);
  }

  // required uint64 e = 6;
  if (has_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->e(), output);
  }

  // required double f = 7;
  if (has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->f(), output);
  }

  // required float g = 8;
  if (has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->g(), output);
  }

  // required string i = 9;
  if (has_i()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->i().data(), this->i().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "i");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->i(), output);
  }

  // repeated int32 j = 10;
  for (int i = 0; i < this->j_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->j(i), output);
  }

  // repeated string k = 11;
  for (int i = 0; i < this->k_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->k(i).data(), this->k(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->k(i), output);
  }

  // optional int32 l = 12;
  if (has_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->l(), output);
  }

  // optional int32 m = 13;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m(), output);
  }

  // optional int64 n = 14;
  if (has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->n(), output);
  }

  // optional int32 o = 15;
  if (has_o()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->o(), output);
  }

  // optional int32 p = 16;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->p(), output);
  }

  // optional .intro.BarInfo bar = 17;
  if (has_bar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->bar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:intro.FooInfo)
}

::google::protobuf::uint8* FooInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:intro.FooInfo)
  // required bool a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->a(), target);
  }

  // required int32 b = 2;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // required int64 c = 3;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->c(), target);
  }

  // required uint32 d = 4;
  if (has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->d(), target);
  }

  // required .intro.FooInfo.H h = 5;
  if (has_h()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->h(), target);
  }

  // required uint64 e = 6;
  if (has_e()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->e(), target);
  }

  // required double f = 7;
  if (has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->f(), target);
  }

  // required float g = 8;
  if (has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->g(), target);
  }

  // required string i = 9;
  if (has_i()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->i().data(), this->i().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "i");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->i(), target);
  }

  // repeated int32 j = 10;
  for (int i = 0; i < this->j_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->j(i), target);
  }

  // repeated string k = 11;
  for (int i = 0; i < this->k_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->k(i).data(), this->k(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->k(i), target);
  }

  // optional int32 l = 12;
  if (has_l()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->l(), target);
  }

  // optional int32 m = 13;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m(), target);
  }

  // optional int64 n = 14;
  if (has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->n(), target);
  }

  // optional int32 o = 15;
  if (has_o()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->o(), target);
  }

  // optional int32 p = 16;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->p(), target);
  }

  // optional .intro.BarInfo bar = 17;
  if (has_bar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->bar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intro.FooInfo)
  return target;
}

int FooInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool a = 1;
    if (has_a()) {
      total_size += 1 + 1;
    }

    // required int32 b = 2;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // required int64 c = 3;
    if (has_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->c());
    }

    // required uint32 d = 4;
    if (has_d()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->d());
    }

    // required uint64 e = 6;
    if (has_e()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->e());
    }

    // required double f = 7;
    if (has_f()) {
      total_size += 1 + 8;
    }

    // required float g = 8;
    if (has_g()) {
      total_size += 1 + 4;
    }

    // required .intro.FooInfo.H h = 5;
    if (has_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->h());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string i = 9;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->i());
    }

    // optional int32 l = 12;
    if (has_l()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->l());
    }

    // optional int32 m = 13;
    if (has_m()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m());
    }

    // optional int64 n = 14;
    if (has_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->n());
    }

    // optional int32 o = 15;
    if (has_o()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->o());
    }

    // optional int32 p = 16;
    if (has_p()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->p());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .intro.BarInfo bar = 17;
    if (has_bar()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bar());
    }

  }
  // repeated int32 j = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->j_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->j(i));
    }
    total_size += 1 * this->j_size() + data_size;
  }

  // repeated string k = 11;
  total_size += 1 * this->k_size();
  for (int i = 0; i < this->k_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FooInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FooInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FooInfo::MergeFrom(const FooInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  j_.MergeFrom(from.j_);
  k_.MergeFrom(from.k_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
    if (from.has_c()) {
      set_c(from.c());
    }
    if (from.has_d()) {
      set_d(from.d());
    }
    if (from.has_e()) {
      set_e(from.e());
    }
    if (from.has_f()) {
      set_f(from.f());
    }
    if (from.has_g()) {
      set_g(from.g());
    }
    if (from.has_h()) {
      set_h(from.h());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_i()) {
      set_i(from.i());
    }
    if (from.has_l()) {
      set_l(from.l());
    }
    if (from.has_m()) {
      set_m(from.m());
    }
    if (from.has_n()) {
      set_n(from.n());
    }
    if (from.has_o()) {
      set_o(from.o());
    }
    if (from.has_p()) {
      set_p(from.p());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_bar()) {
      mutable_bar()->::intro::BarInfo::MergeFrom(from.bar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FooInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooInfo::CopyFrom(const FooInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FooInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  if (has_bar()) {
    if (!this->bar().IsInitialized()) return false;
  }
  return true;
}

void FooInfo::Swap(FooInfo* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(b_, other->b_);
    std::swap(c_, other->c_);
    std::swap(d_, other->d_);
    std::swap(e_, other->e_);
    std::swap(f_, other->f_);
    std::swap(g_, other->g_);
    std::swap(h_, other->h_);
    std::swap(i_, other->i_);
    j_.Swap(&other->j_);
    k_.Swap(&other->k_);
    std::swap(l_, other->l_);
    std::swap(m_, other->m_);
    std::swap(n_, other->n_);
    std::swap(o_, other->o_);
    std::swap(p_, other->p_);
    std::swap(bar_, other->bar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FooInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooInfo_descriptor_;
  metadata.reflection = FooInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace intro

// @@protoc_insertion_point(global_scope)
